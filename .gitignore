## THIS FILE IS BASED ON A BROAD TEMPLATE. ENTRIES NOT IN USE ARE REMOVED AUTOMATICALLY TO SAVE
## CYCLES FOR THE IDE... PERIODICALLY THE ORIGINAL RULES WILL BE APPLIED TO VALIDATE NO KRUFT IS
## IN THE REPO. THIS IS A MANUAL PROCESS.


### VisualStudioCode template
### LibreOffice template
# LibreOffice locks
### Xcode template
# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
## compatibility with Xcode 8 and earlier (ignoring not required starting Xcode 9)
## compatibility with Xcode 3 and earlier (ignoring not required starting Xcode 4)
### Vim template
# Swap
# Session
# Temporary
# Auto-generated tag files
# Persistent undo
### SublimeText template
# Cache files for Sublime Text
# Workspace files are user-specific
# Project files should be checked into the repository, unless a significant
# proportion of contributors will probably not be using Sublime Text
# *.sublime-project

# SFTP configuration file
# Package control specific files
# Sublime-github package stores a github token in this file
# https://packagecontrol.io/packages/sublime-github
### JetBrains template
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and WebStorm
# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# User-specific stuff
# Sensitive or high-churn files
# Gradle
# Gradle and Maven with auto-import
# When using Gradle or Maven with auto-import, you should exclude module files,
# since they will be recreated, and may cause churn.  Uncomment if using
# auto-import.
# .idea/modules.xml
# .idea/*.iml
# .idea/modules

# CMake
cmake-build-*/

# Mongo Explorer plugin
# File-based project format
# IntelliJ
# mpeltonen/sbt-idea plugin
# JIRA plugin
# Cursive Clojure plugin
# Crashlytics plugin (for Android Studio and IntelliJ)
# Editor-based Rest Client
### C++ template
# Prerequisites
# Compiled Object files
# Precompiled Headers
# Compiled Dynamic libraries
# Fortran module files
# Compiled Static libraries
*.lib

# Executables
*.exe
### Backup template
### MicrosoftOffice template

# Word temporary
# Excel temporary
# Excel Backup File
# PowerPoint temporary
# Visio autosave temporary files
### Linux template

# temporary files which can be created if a process still has a handle open of a deleted file
# KDE directory preferences
# Linux trash folder which might appear on any partition or disk
# .nfs files are created when an open file is removed but is still being accessed
### CMake template
Makefile
### Anjuta template
# Local configuration folder and symbol database
### Autotools template
# http://www.gnu.org/software/automake

# http://www.gnu.org/software/autoconf

# https://www.gnu.org/software/libtool/

# http://www.gnu.org/software/texinfo

# http://www.gnu.org/software/m4/

### Node template
# Logs
*.log
# Runtime data
# Directory for instrumented libs generated by jscoverage/JSCover
# Coverage directory used by tools like istanbul
# nyc test coverage
# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
# Bower dependency directory (https://bower.io/)
# node-waf configuration
# Compiled binary addons (https://nodejs.org/api/addons.html)
# Dependency directories
# TypeScript v1 declaration files
# Optional npm cache directory
# Optional eslint cache
# Optional REPL history
# Output of 'npm pack'
# Yarn Integrity file
# dotenv environment variables file
# parcel-bundler cache (https://parceljs.org/)
# next.js build output
# nuxt.js build output
# vuepress build output
# Serverless directories
### macOS template
# General
# Icon must end with two \r
# Thumbnails
# Files that might appear in the root of a volume
# Directories potentially created on remote AFP share
### Python template
# Byte-compiled / optimized / DLL files
# C extensions

# Distribution / packaging
# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
# Installer logs
# Unit test / coverage reports
# Translations
# Django stuff:
# Flask stuff:
# Scrapy stuff:
# Sphinx documentation
# PyBuilder
# Jupyter Notebook
# pyenv
# celery beat schedule file
# SageMath parsed files
# Environments
# Spyder project settings
# Rope project settings
# mkdocs documentation
# mypy
### Windows template
# Windows thumbnail cache files
# Dump file
# Folder config file
# Recycle Bin used on file shares
# Windows Installer files
# Windows shortcuts
### Archives template
# It's better to unpack these files and commit the raw source because
# git has its own built in compression methods.
*.rar
# Packing-only formats
# Package management formats
### VisualStudio template
## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore

# User-specific files
*.user
# User-specific files (MonoDevelop/Xamarin Studio)
# Build results
# Visual Studio 2015/2017 cache/options directory
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
# MSTest test Results
# NUNIT
# Build Results of an ATL Project
# Benchmark Results
# .NET Core
# StyleCop
# Files built by Visual Studio
# Chutzpah Test files
# Visual C++ cache files
# Visual Studio profiler
# Visual Studio Trace Files
# TFS 2012 Local Workspace
# Guidance Automation Toolkit
# ReSharper is a .NET coding add-in
# JustCode is a .NET coding add-in
# TeamCity is a build add-in
# DotCover is a Code Coverage Tool
# AxoCover is a Code Coverage Tool
# Visual Studio code coverage results
# NCrunch
# MightyMoose
# Web workbench (sass)
# Installshield output folder
# DocProject is a documentation generator add-in
# Click-Once directory
# Publish Web Output
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
# NuGet Packages
# The packages folder can be ignored because of Package Restore
# except build/, which is used as an MSBuild target.
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
# Microsoft Azure Build Output
# Microsoft Azure Emulator
# Windows Store app package directories and files
# Visual Studio cache files
# files ending in .cache can be ignored
# but keep track of directories ending in .cache
# Others
# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
# SQL Server files
# Business Intelligence projects
# Microsoft Fakes
# GhostDoc plugin setting file
# Node.js Tools for Visual Studio
# Visual Studio 6 build log
# Visual Studio 6 workspace options file
# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
# Visual Studio LightSwitch build output
# Paket dependency manager
# FAKE - F# Make
# JetBrains Rider
# CodeRush
# Python Tools for Visual Studio (PTVS)
# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
# Telerik's JustMock configuration file
# BizTalk build output
# OpenCover UI analysis results
# Azure Stream Analytics local run output
# MSBuild Binary and Structured Log
# NVidia Nsight GPU debugger configuration file
# MFractors (Xamarin productivity tool) working folder
### NotepadPP template
# Notepad++ backups #
### C template
# Prerequisites

# Object files
# Linker output
# Precompiled Headers

# Libraries

# Shared objects (inc. Windows DLLs)
# Executables
# Debug files
# Kernel Module Compile Results
### Glenn's Repo Kruft template
*.local
.*
/*.jpg
/stock
a.out
CMakeCache.txt
*.webloc
CMakeFiles
